# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file   controllers.Assets.versioned(path="/public", file: Asset)

# Serve GitPitch oEmbed provider responses.
GET     /pitchme/oembed com.gitpitch.controllers.PitchController.oembed(url:String, format:String ?= null, width:String ?= null, height:String ?= null, maxwidth:String ?= null, maxheight:String ?= null, referrer:String ?= null)

# Serve GitPitch raw file content.
GET     /pitchme/raw/:grs/:user/:repo/:b/*path com.gitpitch.controllers.PitchController.raw(grs: String, user: String, repo: String, b: String, path: String)

# Serve GitPitch GIST iFrame for {gid}.
GET     /pitchme/gist/:gid      com.gitpitch.controllers.PitchController.gist(gid:String)

# Serve GitPitch Home Side Panel
GET     /pitchme/home/:grs/:user/:repo/:b/:t    com.gitpitch.controllers.PitchController.home(grs:String, user:String, repo:String, b:String, t:String, p:String ?= null, offline:String ?= null)

# Serve GitPitch Git (GRS) Side Panel
GET     /pitchme/git/:grs/:user/:repo/:b/:t    com.gitpitch.controllers.PitchController.git(grs:String, user:String, repo:String, b:String, t:String, p:String ?= null, offline:String ?= null)

# Serve GitPitch Themes Side Panel
GET     /pitchme/themes/:grs/:user/:repo/:b/:t    com.gitpitch.controllers.PitchController.themes(grs:String, user:String, repo:String, b:String, t:String, p:String ?= null, offline:String ?= null)

# Serve PITCHME.pdf.
GET     /pitchme/print/:grs/:user/:repo/:b/:t/PITCHME.pdf    com.gitpitch.controllers.PitchController.print(grs:String, user:String, repo:String, b:String, t:String, p:String ?= null, n:String ?= null)

# Serve PITCHME.zip.
GET     /pitchme/offline/:grs/:user/:repo/:b/:t/PITCHME.zip    com.gitpitch.controllers.PitchController.offline(grs:String, user:String, repo:String, b:String, t:String, p:String ?= null, n:String ?= null)

# Redirect to GitHub OAuth Access Request
# GET     /pitchme/authreq com.gitpitch.controllers.AuthController.authreq()

# Handle GitHub OAuth Callback
# GET     /pitchme/authorized   com.gitpitch.controllers.AuthController.authorized(code:String ?= null, state:String ?= null)

# Serve PITCHME.md markdown.
GET     /pitchme/markdown/:grs/:user/:repo/:b/PITCHME.md     com.gitpitch.controllers.PitchController.markdown(grs:String, user:String, repo:String, b:String, p:String ?= null)

# Serve PITCHME.md presentation page.
GET     /:user/:repo/:b     com.gitpitch.controllers.PitchController.slideshow(user:String, repo:String, b:String, grs:String ?= null, t:String ?= null, p:String?= null, n:String ?= null, offline:String ?= null, fragments:String ?= null, `print-pdf`:String ?= null)

# Serve PITCHME.md presentation page, short URI format.
GET     /:user/:repo    com.gitpitch.controllers.PitchController.slideshow(user:String, repo:String, b:String ?= null, grs:String ?= null, t:String ?= null, p:String?= null, n:String ?= null, offline:String ?= null, fragments:String ?= null, `print-pdf`:String ?= null)

# Catch-all route redirect to website.
GET     /*path          com.gitpitch.controllers.PitchController.catchall(path:String)
